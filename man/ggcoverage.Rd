% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggcoverage.R
\name{ggcoverage}
\alias{ggcoverage}
\title{Create Coverage Plot.}
\usage{
ggcoverage(
  data,
  single.nuc = FALSE,
  mapping = NULL,
  color = NULL,
  rect.color = NA,
  plot.type = c("facet", "joint"),
  facet.key = "Type",
  joint.avg = FALSE,
  facet.order = NULL,
  facet.color = NULL,
  facet.y.scale = c("free", "fixed"),
  group.key = "Group",
  range.size = 3,
  range.position = c("in", "out"),
  plot.space = 0.2,
  mark.region = NULL,
  mark.color = "grey",
  mark.alpha = 0.5,
  show.mark.label = TRUE,
  mark.label.size = 4
)
}
\arguments{
\item{data}{Coverage dataframe loaded by \code{\link{LoadTrackFile}}.}

\item{single.nuc}{Logical value, whether to visualize at single nucleotide level. Default: FALSE.}

\item{mapping}{Set of aesthetic mappings created by \code{aes} or \code{aes_}. Default: NULL.}

\item{color}{Track color. Default: NULL (select automatically).}

\item{rect.color}{The color of every bin. Default: NA.}

\item{plot.type}{The type of the plot, choose from facet (separate plot for every sample) and
joint (combine all sample in a single plot). Default: facet.}

\item{facet.key}{Sample type key to create coverage plot. Default: Type.}

\item{joint.avg}{Logical value, whether to show average coverage across \code{group.key}. Default: FALSE.}

\item{facet.order}{The order of Coverage plot. Default: NULL.}

\item{facet.color}{The color of sample text. Default: NULL (select automatically).}

\item{facet.y.scale}{The shared type of y-axis scales across facets, choose from free (facets have different y-axis scales),
fixed (facets have same y-axis scales). Default: free.}

\item{group.key}{Group of samples. Default: NULL.}

\item{range.size}{The label size of range text, used when \code{range.position} is in. Default: 3.}

\item{range.position}{The position of y axis range, chosen from in (move y axis in the plot) and
out (normal y axis). Default: in.}

\item{plot.space}{The space between every facet. Default: 0.2.}

\item{mark.region}{Mark region on the plot. Default: NULL.}

\item{mark.color}{The color of marked region. Default: "grey".}

\item{mark.alpha}{The alpha of marked region. Default: 0.5.}

\item{show.mark.label}{Logical value, whether to show mark label (use label column in \code{mark.region}). Default: TRUE.}

\item{mark.label.size}{The label size of mark label. Default: 4.}
}
\value{
A ggplot2 object.
}
\description{
Create Coverage Plot.
}
\examples{
library(ggcoverage)
library(rtracklayer)
library(ggplot2)

# import track data
meta.file <- system.file("extdata", "RNA-seq", "meta_info.csv", package = "ggcoverage")
sample.meta <- read.csv(meta.file)
track.folder <- system.file("extdata", "RNA-seq", package = "ggcoverage")

track.df <- LoadTrackFile(
  track.folder = track.folder, format = "bw",
  region = "chr14:21,677,306-21,737,601",
  extend = 2000, meta.info = sample.meta
)

gtf.file <- system.file("extdata", "used_hg19.gtf", package = "ggcoverage")
gtf.gr <- rtracklayer::import.gff(con = gtf.file, format = "gtf")

# plot tracks with coloring by 'Group' variable
ggcoverage(data = track.df, facet.key = "Type", group.key = "Group")

# plot tracks without coloring by any group
ggcoverage(data = track.df, facet.key = "Type", group.key = NULL)

# plot tracks with coloring each facet differently (facet.key == group.key)
ggcoverage(data = track.df, facet.key = "Type", group.key = "Type")

# supply your own colors
ggcoverage(
  data = track.df, facet.key = "Type",
  group.key = "Type", color = 1:4,
  facet.color = 1:4
)

# plot tracks together in one panel instead of separately;
# 'facet.key' is not needed
ggcoverage(
  data = track.df, group.key = "Type",
  plot.type = "joint"
)

# use a custom theme
ggcoverage(data = track.df, facet.key = "Type") +
  theme_bw()

# mark a region
ggcoverage(
  data = track.df, facet.key = "Type",
  mark.region = data.frame(
    start = c(21678900,21732001,21737590),
    end = c(21679900,21732400,21737650),
    label=c("M1", "M2", "M3")),
  mark.color = grey(0.4)
)

# position range labels outside of tracks
ggcoverage(data = track.df, facet.key = "Type", range.position = "out")

}
